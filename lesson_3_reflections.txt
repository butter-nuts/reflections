Q: When would you want to use a remote repository rather than keeping all your work local?
A: For a number of reasons. It allows tou to acces your work from multiple computers/locations, as well as to easuily share your work and colaborate. It also has the advantage of an offsite backup (provided you keep a local clone)

Q: Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
A: Pulling manualy allows the user to decide what changes are to be incoperated and when. This allows total control and prevents pulling changes made by others which may break the working (i.e. local) compy of the project. 

Q: Describe the differences between forks, clones, and branches. When would you use one instead of another?
A: Clone is a copt of a repository, fork is similar to clone but retains a referance to the original project and is a feature of GitHub (not Git). Branches are branched from a commit, and still form part of the original repository.

Q: What is the benefit of having a copy of the last known state of the remote stored locally?
A: Having a copy of the last known state of the remote stored locally allows the user to work offline with the latest (at the time of the last fetch) version of the remote. This can be usefull in many ways (such as the ability yo use diff, the ability to merge, etc.)

Commands:
git remote          | Manage the set of repositories ("remotes") whose branches you track.
git remote -v       | Be a little more verbose and show remote url after name.
git push  					| Updates remote refs using local refs, while sending objects necessary to complete the given refs.   
git pull  					| Incorporates changes from a remote repository into the current branch. 
